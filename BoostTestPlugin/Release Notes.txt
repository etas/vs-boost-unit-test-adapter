# Version History

_The version history is presented in descending order (i.e. the latest version updates are presented at the top of the page)_

---
### Version 1.0.1 (Beta)

Misc:
  - A major code re-factoring activity has been done.
  - Release code as open source

New features:
- In the previous versions of the Boost Unit Test Adapter, there was no reporting with respect to memory leaks. The memory leaks information reported by Boost Unit Test Framework is now being parsed and reported to the user.  The user is also given the possibility to fail a test if any memory leaks are discovered via a user settable option.
- In the previous versions only the last test result of a particular unit test was reported back to the user.  In this new version, the user is able to see all the test results respective to a test.
- All the output (being what is commonly referred to as stdout and stderr) generated by a unit test is reported into an output screen accessible at unit test level. 
- Any exceptions raised by the Boost Unit Test Adapter itself and any informational logs are now logged to a log file.
- Added support for nested test suites. The user is able to deduce the nesting level via the naming of the testcase as presented in the test explorer.
- Replaced and updated the user manual which was previously in a pdf format to one written in a GitHub flavoured markdown format.
- The user can now specify an execution timeout.  If a test takes more than a configurable amount of time, the test is considered as failed.
- Conditional Inclusions statements such as #if....#elif....#else....#endif, #ifdef, #if defined, #ifndef, #if !defined are now supported with some limitations on the conditional complexity.
- Filtering for multi-line comments and single line comments are now much more robust.
- Created a Boost External Test Runner so that users can execute Boost Unit test project compiled as a dynamic link library.
- Added support to Microsoft Visual Studio 2015 RC.
- Added support that in case a source file is excluded from build(https://raw.githubusercontent.com/netspiri/vs-boost-unit-test-adapter/master/Doku/images/excluded_from_build.png) the source file is not parsed for any Boost Unit Tests.
- Header files are now also parsed for Boost Unit Tests.

---
### Version 0.9.4 (Beta 5)


Bug fixes:
- Previous version has not been working with Visual Studio 2012. Issue is now fixed.

---
### Version 0.9.3 (Beta 4)


Misc:
- In the output window of Visual Studio, the currently executed unit test is now shown.

---
### Version 0.9.2 (Beta 3)


Bug fixes:
- Known limitation from Version 0.9.1 (Beta 3) is fixed by catching the COMException "Application is Busy" and retrying several times. Only if all retries have failed, the COMException will be thrown. A sufficient number of retries shall avoid this issue.

---
### Version 0.9.1 (Beta 3)


Bug fixes:
- When a test case cannot be executed at all (possibly due to incorrect usage or parsing problems), the add-in crashed and no other unit test could be executed any more. Now any occurrence of exception during of the execution of unit tests are handled and written to the output window of Visual Studio.
  
Known Limitation:
- In case unit tests are not shown in the text explorer of Visual Studio, rebuild the solution/project.

---
### Version 0.9 (Beta 3)


Features:
- Support for Microsoft Visual Studio 2013 added.

---
### Version 0.8 (Beta 2)


Features:
- Support for BOOST_FIXTURE_TEST_SUITE and BOOST_FIXTURE_TEST_CASE macros.

---
### Version 0.7 (Beta 1)


Features:
- now displaying unit tests when 64-bit is selected as platform.

---
### Version 0.6.3 (ALPHA 6)


Bug Fixes:
- targetver.h, that has been removed from the project template in the previous version, has been added again.

---
### Version 0.6.2 (ALPHA 6)


Bug Fixes:
- A mechanism that is supposed to ignore inactive code within the pattern /*... */ did not work properly. Whenever using this pattern, not a single unit test has been discovered. This is now fixed.
- The XML output mechanism has been changed: instead of piping the test results to a file via standard output, the boost mechanism is used (--log_sink=, --report_sink=).
  It is now possible to use std::cout in unit tests without affecting the test results (e.g. by using special characters like &, …).

---
### Version 0.6.1 (ALPHA 6)


Bug Fixes:
- XML output file will be overwritten when having more than one unit test project. This is now fixed by writing unique xml files for each project in the solution.
- Final bug fix: for target names different from the project name unit tests have not been displayed in the test explorer so far.


---
### Version 0.5.4 (ALPHA 5)


Features:
- Debug unit tests using the VS2012 Test Explorer Window.

Bug Fixes:
- Adjusted the project settings of the template project (C/C++ -> Advanced -> Use Full Paths -> Yes (/FC))
- When Visual studio projects are structured in solution folders, the extension now recognizes all tests.
- When the number of test cases to be run exceeds 30, the Boost Unit Test Adapter does not throw an exception anymore.
- For target names different from the project name unit tests have not been displayed in the test explorer so far. This is now fixed.

Misc:
- Project template modified (file containing target version removed).

---
### Version 0.4 (ALPHA 4)


Features:
- Support for the BOOST_AUTO_TEST_CASE_TEMPLATE macro.

Bug Fixes:
- When changing the output directory individually, the Boost Unit Test Adapter can now discover the unit test cases and does not throw an exception.

---
### Version 0.3 (ALPHA 3)


Bug Fixes:
- If a test case is commented out by /*…*/, the adapter does now ignore this test case and does not display or execute it any-more. Also, an exception is not thrown any-more.
- If a test case containing the macro BOOST_CHECK_THROW fails, an additional empty line has been displayed below the error reason. This it now fixed.

---
### Version 0.2 (ALPHA 2)


Bug Fixes:
- If a Boost Unit Test project is structured in a folder, the Boost Unit Test Adapter does now recognize the unit tests.
- When "creating" memory leaks (accidentally, for instance) the Unit Test Adapter does not throw an exception.
- In the test explorer, error message provided by BOOST is displayed when using the macro BOOST_CHECK_THROW().
- When installing the Boost Unit Test Adapter directly from Visual Studio (go to Tools -> Extensions and Updates-> Online and search for term Boost), the Unit test adapter gets installed without any error.

---
### Version 0.1 (ALPHA 1)

Features:
- Display of test cases
- Run all test cases
- Failed test details
- Finding test case location in source
- Running selective test cases
- Search for a test case
